import org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask

plugins {
    id("net.minecraftforge.gradle") version "6.+"
    id("wtf.gofancy.fancygradle") version "1.1.2-5"
    id("org.jetbrains.gradle.plugin.idea-ext") version "1.1.7"
    id("org.jetbrains.kotlin.jvm") version "1.9.23"
    id("com.jfrog.artifactory")
    id("org.jetbrains.dokka")
}

version = "$mod_version.$patch_version"
group = "com.teamwizardry"
archivesBaseName = "refraction-$mc_version"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

sourceCompatibility = targetCompatibility = 1.8

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

fancyGradle {
    patches {
        coremods
    }
}

minecraft {
    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            environment 'MC_VERSION', '1.12.2'
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            environment 'MC_VERSION', '1.12.2'
        }
    }
}

repositories {
    mavenCentral()
    maven { url = "https://maven.bluexin.be/repository/snapshots/" }
    maven { url = "https://dvs1.progwml6.com/files/maven" }
    maven { url = "https://maven.tterrag.com/" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = 'https://maven.mcmoddev.com' }
    maven { url = "https://mvnrepository.com/artifact/org.jetbrains/annotations" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "Jitpack.io"
        url = "https://jitpack.io"
    }
    maven {
        url = uri("https://maven.cleanroommc.com")
    }
    mavenLocal()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    api fg.deobf("curse.maven:forgelin-continuous-456403:4635770")
    runtime fg.deobf("curse.maven:forgelin-continuous-456403:4635770")

    implementation("org.magicwerk:brownies-collections:0.9.13")

    implementation("com.ibm.icu:icu4j:63.1")
    implementation("org.msgpack:msgpack-core:0.8.16")
    implementation("com.github.thecodewarrior:bitfont:b8251e7ba0")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "refraction",
                "Specification-Vendor": "Mysticpasta1",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Mysticpasta1",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.named('compileKotlin', KotlinCompilationTask) {
    compilerOptions {
        freeCompilerArgs.add("-Xuse-experimental=io.ktor.locations.KtorExperimentalLocationsAPI")
        freeCompilerArgs.add("-opt-in=org.mylibrary.OptInAnnotation")
    }
}

jar.finalizedBy('reobfJar')